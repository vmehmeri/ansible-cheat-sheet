---
- hosts: localhost
  gather_facts: no
  vars:
    foo: 'foobar124'
    #bar: 'hey'
    id: 124
    name: 'BLA-BLA'
    odd_or_even: "{{ 'even' if (id |int is divisibleby 2) else 'odd' }}"
    list_one:
      - 1
      - 2
    list_two:
      - a
      - b
  pre_tasks:
    - setup:
      register: local_facts
    - set_fact:
        fact1: this is a fact
        fact2: this is another fact
  tasks:
    - name: "Write all facts to /tmp/local_facts"
      copy:
        content: "{{ local_facts }}"
        dest: /tmp/local_facts

    - debug:
        msg: "Today's date: {{ local_facts.ansible_facts.ansible_date_time.date }}"

    - debug:
        msg: "Run by user: {{ lookup('env','USER') }}"
        verbosity: 2

    - name: show some facts
      debug:
        msg: "{{ fact1 }} and {{ fact2 }}"

    - debug:
        msg: "ID is an {{ 'even' if (id |int is divisibleby 2) else 'odd' }} number"

    - debug:
        msg: "foo var contains a number: {{ foo | regex_search('[0-9]+') }} "

    - debug:
        msg: "The variable bar was defined and it is not empty"
      when: not ((bar is undefined) or (bar is none) or (bar | trim == ''))

    - name: Shows bar value or a default value if it is not defined
      debug:
        msg: "Bar = {{ bar | default(5) }}"

    - name: The outputs of this task is hidden
      debug:
        msg: "Here's my secret password: password123"
      no_log: true

    - debug:
        msg: "[LOOP] task #{{ item }}"
      with_items: [1,2,3,4,5]

    - debug:
        msg: "[LOOP TOGETHER] Letter {{ item.0 }} goes with number {{ item.1 }}"
      with_together:
        - [ A, B, C ]
        - [ 1, 2, 3 ]

    - debug:
        msg: "[NESTED LOOP] Letter {{ item.0 }} also goes with {{ item.1 }}"
      with_nested:
        - [ A, B ]
        - [ 1, 2, 3 ]

    - name: Repeat this task until the result is an even number
      debug:
        # generates a random number fom 0 to 100
        msg: '{{ 100 | random }}'
      register: result
      until: result.msg |int is divisibleby 2
      delay: 1
      retries: 3
      ignore_errors: yes

    - debug:
        msg: "Did not get an even number after 3 retries"
      when: result.failed == true

    - name: A random message
      debug:
        msg: "{{ item }}"
      with_random_choice:
        - "go through the door"
        - "drink from the goblet"
        - "press the red button"
        - "do nothing"

    - name: Create a dictionary with two lists
      set_fact:
        obj:
          numbers: "{{ list_one }}"
          letters: "{{ list_two }}"
    - debug:
        msg: "A dictionary of letters and numbers: {{ obj }}"
    - debug:
        msg: "Only the letters: {{ obj.letters }}"
    - debug:
        msg: "The letter corresponding to {{ obj.numbers[0] }} is {{ obj.letters[0] }}"

    - name: Append lists
      set_fact:
        lists_merged: "{{ list_one }} + {{ list_two }}"

    - name: Show results
      debug:
        msg: "A big list with letters and numbers: {{ lists_merged }}"
        
    - name: create list of dictionaries
      set_fact:
        list_of_dict: {}
      set_fact:
        list_of_dict: "{{ list_of_dict }} + {{[ {'number': item.0} | combine( {'letter': item.1} ) ]}}"
      with_together:
        - "{{ list_one }}"
        - "{{ list_two }}"
        
    - name: show list of dictionaries
      debug:
        msg: "{{ list_of_dict }}"
    - name: iterate through list of dictionaries
      debug:
        msg: "{{ item.letter }} -> {{ item.number }}"
      with_items: " {{ list_of_dict }}"
      when: item.letter is defined
